plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'br.hendrew'
version = '1.0.0'
description = 'Golden Raspberry-api'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('openCsv', "5.9")
    set('springDocOpenApi', '2.8.9')
    set('jUnit', '5.13.4')
    set('mockitoCore', '5.18.0')
    set('hibernateValidator', '9.0.1.Final')
    set('dataType', '2.19.2')
    set('swaggerAnnotations', '2.2.30')
    set('mapStruct', '1.5.5.Final')
    set('logCaptor', '2.12.0')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation("com.opencsv:opencsv:${openCsv}")

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jUnit}"
    testImplementation "org.mockito:mockito-core:${mockitoCore}"
    testImplementation "io.github.hakky54:logcaptor:${logCaptor}"

    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0")

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocOpenApi}"
    implementation "io.swagger.core.v3:swagger-annotations:${swaggerAnnotations}"

    implementation "org.hibernate.validator:hibernate-validator:${hibernateValidator}"

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${dataType}"

    implementation "org.mapstruct:mapstruct:${mapStruct}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStruct}"
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.named('test') {
    useJUnitPlatform()
}
